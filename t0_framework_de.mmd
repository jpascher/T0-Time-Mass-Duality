flowchart TD
    A[🎯 Eingabe: Semiprime N = p × q] --> B{📊 Zahlen-Analyse}
    
    B --> C{🔍 Größen-Klassifikation}
    C -->|N < 1000| D[🎯 Zwillingsprim-Strategie<br/>ξ = 1/50]
    C -->|1000 ≤ N < 10000| E[📈 Mittlere Größe Strategie<br/>ξ = 1/1000]
    C -->|N ≥ 10000| F[🌟 Universal-Strategie<br/>ξ = 1/100]
    
    B --> G{🎵 Spezialfall-Erkennung}
    G -->|Ramanujan 1729<br/>Mersenne 2047| H[🔬 Spezialfälle-Strategie<br/>ξ = 1/42]
    G -->|Standard-Zahlen| I[🤖 Auto-Auswahl Strategie]
    
    D --> J[⚙️ T0 Perioden-Generator]
    E --> J
    F --> J
    H --> J
    I --> J
    
    J --> K[📐 Test-Perioden generieren<br/>T = √N ± δ]
    K --> L[🧮 Rationale Arithmetik Bewertung]
    
    L --> M{🎼 Perioden-Resonanz Prüfung}
    M -->|Score > Schwellwert| N[✨ Starke Resonanz gefunden]
    M -->|Score ≤ Schwellwert| O[🔄 Nächste Periode versuchen]
    
    O --> K
    
    N --> P[🔍 Faktor-Extraktion]
    P --> Q[📝 Berechne: p = gcd(a^T - 1, N)]
    Q --> R{✅ Gültiger Faktor gefunden?}
    
    R -->|Ja: p > 1, p < N| S[🎉 ERFOLG<br/>Gebe Faktoren p, q = N/p zurück]
    R -->|Nein: p = 1 oder p = N| T{⏰ Timeout-Prüfung}
    
    T -->|Zeit < Limit| O
    T -->|Zeit ≥ Limit| U[❌ TIMEOUT<br/>Fallback zu klassischer Methode]
    
    S --> V[📊 Leistungs-Metriken<br/>• Ausführungszeit<br/>• Iterations-Anzahl<br/>• Verwendete ξ-Strategie<br/>• Resonanz-Score]
    U --> W[📈 Klassischer Fallback<br/>Probedivision / Fermat]
    
    style A fill:#e1f5fe
    style S fill:#c8e6c9
    style U fill:#ffcdd2
    style V fill:#f3e5f5
    style J fill:#fff3e0
    style M fill:#e8f5e8
    style N fill:#c8e6c9