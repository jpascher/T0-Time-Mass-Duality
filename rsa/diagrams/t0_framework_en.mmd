flowchart TD
    A[🎯 Input: Semiprime N = p × q] --> B{📊 Number Analysis}
    
    B --> C{🔍 Size Classification}
    C -->|N < 1000| D[🎯 Twin Prime Strategy<br/>ξ = 1/50]
    C -->|1000 ≤ N < 10000| E[📈 Medium Size Strategy<br/>ξ = 1/1000]
    C -->|N ≥ 10000| F[🌟 Universal Strategy<br/>ξ = 1/100]
    
    B --> G{🎵 Special Case Detection}
    G -->|Ramanujan 1729<br/>Mersenne 2047| H[🔬 Special Cases Strategy<br/>ξ = 1/42]
    G -->|Standard Numbers| I[🤖 Auto-Select Strategy]
    
    D --> J[⚙️ T0 Period Generator]
    E --> J
    F --> J
    H --> J
    I --> J
    
    J --> K[📐 Generate Test Periods<br/>T = √N ± δ]
    K --> L[🧮 Rational Arithmetic Evaluation]
    
    L --> M{🎼 Period Resonance Check}
    M -->|Score > Threshold| N[✨ Strong Resonance Found]
    M -->|Score ≤ Threshold| O[🔄 Try Next Period]
    
    O --> K
    
    N --> P[🔍 Factor Extraction]
    P --> Q[📝 Compute: p = gcd(a^T - 1, N)]
    Q --> R{✅ Valid Factor Found?}
    
    R -->|Yes: p > 1, p < N| S[🎉 SUCCESS<br/>Return factors p, q = N/p]
    R -->|No: p = 1 or p = N| T{⏰ Timeout Check}
    
    T -->|Time < Limit| O
    T -->|Time ≥ Limit| U[❌ TIMEOUT<br/>Fall back to classical method]
    
    S --> V[📊 Performance Metrics<br/>• Execution time<br/>• Iterations count<br/>• ξ-strategy used<br/>• Resonance score]
    U --> W[📈 Classical Fallback<br/>Trial Division / Fermat]
    
    style A fill:#e1f5fe
    style S fill:#c8e6c9
    style U fill:#ffcdd2
    style V fill:#f3e5f5
    style J fill:#fff3e0
    style M fill:#e8f5e8
    style N fill:#c8e6c9